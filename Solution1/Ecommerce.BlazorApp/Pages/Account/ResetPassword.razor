@page "/resetpassword/{code}"
@inject NavigationManager NavigationManager
@inject IHttpClientFactory _clientFacotry

<section class="content">
    <div class="card">
        <div class="card-header">
            <h3 class="card-title">Reset Password</h3>

            <div class="card-tools">
                <button type="button" class="btn btn-tool" data-card-widget="collapse" title="Collapse">
                    <i class="fas fa-minus"></i>
                </button>
                <button type="button" class="btn btn-tool" data-card-widget="remove" title="Remove">
                    <i class="fas fa-times"></i>
                </button>
            </div>
        </div>
        <div class="card-body">
            @if (_showSpinner == true)
            {
                <div class="spinner"></div>
            }
            <EditForm Model="resetPasswordViewModel" OnValidSubmit="ResetPasswordAsync">
                <div asp-validation-summary="All" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Input.Email"></label>
                    <input @bind-value="resetPasswordViewModel.Email" class="form-control" placeholder="Enter your email" />
                    <span asp-validation-for="Input.Email" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Input.Password"></label>
                    <input @bind-value="resetPasswordViewModel.Password" class="form-control" placeholder="Enter your new Password" />
                    <span asp-validation-for="Input.Password" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Input.ConfirmPassword"></label>
                    <input @bind-value="resetPasswordViewModel.ConfirmPassword" class="form-control" placeholder="Enter Confirm Password" />
                    <span asp-validation-for="Input.ConfirmPassword" class="text-danger"></span>
                </div>
                <button type="submit" class="btn btn-primary">Submit</button>
            </EditForm>
        </div>

    </div>

</section>


@code {

    [Parameter]
    public string? Code { get; set; }
    internal bool _showSpinner = false;
    public ResetPasswordRequest resetPasswordViewModel = new();

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            resetPasswordViewModel.Code = Code;
        }
    }

    public async Task ResetPasswordAsync()
    {
        var httpClient = _clientFacotry.CreateClient("AuthAPI");
        var registerUrl = new Uri(httpClient.BaseAddress + $"/account/resetpassword");
        StringContent content = new StringContent(JsonConvert.SerializeObject(resetPasswordViewModel), Encoding.UTF8, "application/json");
        using (var response = await httpClient.PostAsync(registerUrl, content))
        {
            string recivedContent = await response.Content.ReadAsStringAsync();
            if (!response.IsSuccessStatusCode)
            {

            }
            if (response.IsSuccessStatusCode)
            {
                NavigationManager.NavigateTo($"/resetpassword");
            }
        }
    }
}
